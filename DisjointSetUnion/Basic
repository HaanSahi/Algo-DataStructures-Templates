class dsu {
	vector<int> p;
	vector<int>sz;
	int n;
public:
	dsu(int _n):n(_n){
		p.resize(n);
		iota(p.begin(), p.end(), 0);
		sz.resize(n,1);
	}
	inline int get(int x){
		return (x==p[x] ? x : (p[x]=get(p[x])));
	}
	inline bool unite(int x,int y){
		x=get(x);
		y=get(y);
		if(x!=y){
			if(sz[y]<sz[x]){
				swap(x,y);
			}
			p[x]=y;
			sz[y]+=sz[x];
			return true;
		}
		return false;
	}
	inline int size(int x){
		x=get(x);
		return sz[x];
	}
};
